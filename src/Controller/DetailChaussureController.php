<?php

namespace App\Controller;

use App\Entity\ModeleChaussure;
use App\Entity\Photo;
use App\Form\ModeleChaussureType;
use App\Form\RegistrationType;
use App\Repository\ClientRepository;
use App\Repository\MarqueRepository;
use App\Repository\ModeleChaussureRepository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\Persistence\ObjectManager;
use http\Client\Response;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

class DetailChaussureController extends AbstractController
{
    /**
     * @var ClientRepository
     */
    private $marqueRepository;
    private $clientRepository;
    function __construct(MarqueRepository $marqueRepository,ClientRepository $clientRepository)
    {
        $this->marqueRepository = $marqueRepository;
        $this->clientRepository=$clientRepository;
    }
    /**
     * @Route("/detail/chaussure/{id}", name="detail_chaussure")
     */
    public function index(ModeleChaussureRepository $repository, int $id)
    {
        $list = $this->marqueRepository->findAll();
        $chaussure = $repository->find($id);
        return $this->render('detail_chaussure/index.html.twig', [
            'chaussure' => $chaussure,'list'=>$list
        ]);
    }

    /**
     * @Route("/chaussure/new", name="chaussure_nouveau")
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function create(Request $request, EntityManagerInterface $manager)
    {
        $chaussure=new ModeleChaussure();

        $photo=new Photo();

      //  $photo->setUrl('http://placehold.it/400*200');

        $photo2=new photo();

      //  $photo2->setUrl('http://placehold.it/400*200');

        $chaussure->addPhoto($photo);
          $chaussure->addphoto($photo2);

        $form = $this->createForm(ModeleChaussureType::class, $chaussure);
        $form->handleRequest($request);
        if($form->isSubmitted() && $form->isValid()) {
            $file = $form->get('coverImage')->getData();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            try{
                $file->move(
                    $this->getParameter('coverImage_directory'),
                    $fileName
                );
            }
            catch (fileException $e){

            }
          //  $manager=$this->getDoctrine()->getManager();
            $chaussure->setCoverImage($fileName);
            $manager->persist($chaussure);
            $manager->flush();

            $this->addFlash('success',
                "Bravo <strong class='text-danger'>{$chaussure->getNom()}</strong> Insertion reussie");
            return $this->redirectToRoute('home');
        }
        $list = $this->marqueRepository->findAll();

        return $this->render('detail_chaussure/nouvelle_chaussure.html.twig', ['form'=>$form->createView(),
            'list'=>$list
        ]);
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}

